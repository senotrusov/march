
= form_for @document do |f|

  - unless @skip_sections
    - content_for :templates do

      #section_template
        = render :partial => 'sections/form', locals: { form: f, section: (section = Section.new) }

      #paragraph_template
        = f.fields_for :sections, section, :index => "" do |section_fields|
          = render :partial => 'paragraphs/form', locals: { form: section_fields, paragraph: Paragraph.new }


  h1 = content_for :title
  
  .document
    - if @document.errors.any?
      #error_explanation
        h2 = "#{pluralize(@document.errors.count, "error")} prohibited this document from being saved:"
        ul
          - @document.errors.full_messages.each do |message|
            li = message
    
    .field
      - if @document.image?
        p
          = image_tag @document.image_url(:normal), alt: nil
          = f.hidden_field :image_cache

        p
          = f.check_box :remove_image
          = f.label :remove_image

      - else
          = f.label :image
          = f.file_field :image

    .field
      = f.label :title
      = f.text_field :title

    .field
      = f.label :url
      = f.text_field :url

    .field
      = f.label :message
      = f.text_area :message

  - unless @skip_sections
    .sort_button
      i.icon-sort
      span.title Sort

    table.section_frames
      tbody
        tr
          - 3.times do |frame|
            td.frame data-frame=frame
              .sections
                - @sections && @sections.select{|s| s.frame == frame}.each do |section|
                  = render :partial => 'sections/form', locals: { form: f, section: section }

              .add_form_template data-template="#section_template"
                i.icon-plus-sign
                | Add ยง section

  .field
    = f.submit @document.new_record? ? 'Publish' : 'Save'


- if content_for? :templates
  .templates
    = content_for :templates
