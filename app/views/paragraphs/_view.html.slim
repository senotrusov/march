.paragraph data-id=paragraph.proto_or_self.id
  a name=paragraph.proto_or_self.id

  - if paragraph.image?
    = link_to image_tag(paragraph.image_url(:mini), alt: nil), paragraph.image_url

  - if edit_controls?(local_assigns)
    - if can :destroy, paragraph
      = link_to icon('remove-sign'), paragraph, method: :delete, remote: true, class: 'action_icon paragraph_destroy', confirm: 'Delete paragraph?'
      
    - if can :update, paragraph
      = link_to icon('edit'), edit_paragraph_path(paragraph), remote: true, class: 'action_icon paragraph_edit'

  .paragraph-id = "Â¶#{paragraph.proto_or_self.id}"

  = render partial: "paragraphs/identity", locals: { paragraph: paragraph.proto_or_self }

  - if paragraph.is_instance
    = render partial: "paragraphs/identity", locals: { paragraph: paragraph, class_name: 'small' }

  - if paragraph.message?
    .message
      = markdown paragraph.message

  - if paragraph.location?
    .map_marker data-lat=paragraph.lat data-lng=paragraph.lng data-zoom=paragraph.zoom

  .details
    | Updated 
    = timeago_tag paragraph.proto_or_self.updated_at
